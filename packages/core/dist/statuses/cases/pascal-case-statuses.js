"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PascalCaseStatuses = void 0;
const code_statuses_1 = require("../code-statuses");
exports.PascalCaseStatuses = {
    Continue: code_statuses_1.CodeStatuses[100],
    SwitchingProtocols: code_statuses_1.CodeStatuses[101],
    Processing: code_statuses_1.CodeStatuses[102],
    EarlyHints: code_statuses_1.CodeStatuses[103],
    Ok: code_statuses_1.CodeStatuses[200],
    Created: code_statuses_1.CodeStatuses[201],
    Accepted: code_statuses_1.CodeStatuses[202],
    NonAuthoritativeInformation: code_statuses_1.CodeStatuses[203],
    NoContent: code_statuses_1.CodeStatuses[204],
    ResetContent: code_statuses_1.CodeStatuses[205],
    PartialContent: code_statuses_1.CodeStatuses[206],
    MultiStatus: code_statuses_1.CodeStatuses[207],
    AlreadyReported: code_statuses_1.CodeStatuses[208],
    ImUsed: code_statuses_1.CodeStatuses[226],
    MultipleChoices: code_statuses_1.CodeStatuses[300],
    MovedPermanently: code_statuses_1.CodeStatuses[301],
    Found: code_statuses_1.CodeStatuses[302],
    SeeOther: code_statuses_1.CodeStatuses[303],
    NotModified: code_statuses_1.CodeStatuses[304],
    UseProxy: code_statuses_1.CodeStatuses[305],
    SwitchProxy: code_statuses_1.CodeStatuses[306],
    TemporaryRedirect: code_statuses_1.CodeStatuses[307],
    PermanentRedirect: code_statuses_1.CodeStatuses[308],
    BadRequest: code_statuses_1.CodeStatuses[400],
    Unauthorized: code_statuses_1.CodeStatuses[401],
    PaymentRequired: code_statuses_1.CodeStatuses[402],
    Forbidden: code_statuses_1.CodeStatuses[403],
    NotFound: code_statuses_1.CodeStatuses[404],
    MethodNotAllowed: code_statuses_1.CodeStatuses[405],
    NotAcceptable: code_statuses_1.CodeStatuses[406],
    ProxyAuthenticationRequired: code_statuses_1.CodeStatuses[407],
    RequestTimeout: code_statuses_1.CodeStatuses[408],
    Conflict: code_statuses_1.CodeStatuses[409],
    Gone: code_statuses_1.CodeStatuses[410],
    LengthRequired: code_statuses_1.CodeStatuses[411],
    PreconditionFailed: code_statuses_1.CodeStatuses[412],
    PayloadTooLarge: code_statuses_1.CodeStatuses[413],
    UriTooLong: code_statuses_1.CodeStatuses[414],
    UnsupportedMediaType: code_statuses_1.CodeStatuses[415],
    RangeNotSatisfiable: code_statuses_1.CodeStatuses[416],
    ExpectationFailed: code_statuses_1.CodeStatuses[417],
    ImATeapot: code_statuses_1.CodeStatuses[418],
    MisdirectedRequest: code_statuses_1.CodeStatuses[421],
    UnprocessableEntity: code_statuses_1.CodeStatuses[422],
    Locked: code_statuses_1.CodeStatuses[423],
    FailedDependency: code_statuses_1.CodeStatuses[424],
    TooEarly: code_statuses_1.CodeStatuses[425],
    UpgradeRequired: code_statuses_1.CodeStatuses[426],
    PreconditionRequired: code_statuses_1.CodeStatuses[428],
    TooManyRequests: code_statuses_1.CodeStatuses[429],
    RequestHeaderFieldsTooLarge: code_statuses_1.CodeStatuses[431],
    UnavailableForLegalReasons: code_statuses_1.CodeStatuses[451],
    InternalServerError: code_statuses_1.CodeStatuses[500],
    NotImplemented: code_statuses_1.CodeStatuses[501],
    BadGateway: code_statuses_1.CodeStatuses[502],
    ServiceUnavailable: code_statuses_1.CodeStatuses[503],
    GatewayTimeout: code_statuses_1.CodeStatuses[504],
    HttpVersionNotSupported: code_statuses_1.CodeStatuses[505],
    VariantAlsoNegotiates: code_statuses_1.CodeStatuses[506],
    InsufficientStorage: code_statuses_1.CodeStatuses[507],
    LoopDetected: code_statuses_1.CodeStatuses[508],
    NotExtended: code_statuses_1.CodeStatuses[510],
    NetworkAuthenticationRequired: code_statuses_1.CodeStatuses[511],
    Used: code_statuses_1.CodeStatuses[226],
    Teapot: code_statuses_1.CodeStatuses[418],
    Internal: code_statuses_1.CodeStatuses[500],
};
//# sourceMappingURL=pascal-case-statuses.js.map