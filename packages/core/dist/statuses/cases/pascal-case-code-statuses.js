"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PascalCaseCodeStatuses = void 0;
const code_statuses_1 = require("../code-statuses");
exports.PascalCaseCodeStatuses = {
    Continue100: code_statuses_1.CodeStatuses[100],
    SwitchingProtocols101: code_statuses_1.CodeStatuses[101],
    Processing102: code_statuses_1.CodeStatuses[102],
    EarlyHints103: code_statuses_1.CodeStatuses[103],
    Ok200: code_statuses_1.CodeStatuses[200],
    Created201: code_statuses_1.CodeStatuses[201],
    Accepted202: code_statuses_1.CodeStatuses[202],
    NonAuthoritativeInformation203: code_statuses_1.CodeStatuses[203],
    NoContent204: code_statuses_1.CodeStatuses[204],
    ResetContent205: code_statuses_1.CodeStatuses[205],
    PartialContent206: code_statuses_1.CodeStatuses[206],
    MultiStatus207: code_statuses_1.CodeStatuses[207],
    AlreadyReported208: code_statuses_1.CodeStatuses[208],
    ImUsed226: code_statuses_1.CodeStatuses[226],
    MultipleChoices300: code_statuses_1.CodeStatuses[300],
    MovedPermanently301: code_statuses_1.CodeStatuses[301],
    Found302: code_statuses_1.CodeStatuses[302],
    SeeOther303: code_statuses_1.CodeStatuses[303],
    NotModified304: code_statuses_1.CodeStatuses[304],
    UseProxy305: code_statuses_1.CodeStatuses[305],
    SwitchProxy306: code_statuses_1.CodeStatuses[306],
    TemporaryRedirect307: code_statuses_1.CodeStatuses[307],
    PermanentRedirect308: code_statuses_1.CodeStatuses[308],
    BadRequest400: code_statuses_1.CodeStatuses[400],
    Unauthorized401: code_statuses_1.CodeStatuses[401],
    PaymentRequired402: code_statuses_1.CodeStatuses[402],
    Forbidden403: code_statuses_1.CodeStatuses[403],
    NotFound404: code_statuses_1.CodeStatuses[404],
    MethodNotAllowed405: code_statuses_1.CodeStatuses[405],
    NotAcceptable406: code_statuses_1.CodeStatuses[406],
    ProxyAuthenticationRequired407: code_statuses_1.CodeStatuses[407],
    RequestTimeout408: code_statuses_1.CodeStatuses[408],
    Conflict409: code_statuses_1.CodeStatuses[409],
    Gone410: code_statuses_1.CodeStatuses[410],
    LengthRequired411: code_statuses_1.CodeStatuses[411],
    PreconditionFailed412: code_statuses_1.CodeStatuses[412],
    PayloadTooLarge413: code_statuses_1.CodeStatuses[413],
    UriTooLong414: code_statuses_1.CodeStatuses[414],
    UnsupportedMediaType415: code_statuses_1.CodeStatuses[415],
    RangeNotSatisfiable416: code_statuses_1.CodeStatuses[416],
    ExpectationFailed417: code_statuses_1.CodeStatuses[417],
    ImATeapot418: code_statuses_1.CodeStatuses[418],
    MisdirectedRequest421: code_statuses_1.CodeStatuses[421],
    UnprocessableEntity422: code_statuses_1.CodeStatuses[422],
    Locked423: code_statuses_1.CodeStatuses[423],
    FailedDependency424: code_statuses_1.CodeStatuses[424],
    TooEarly425: code_statuses_1.CodeStatuses[425],
    UpgradeRequired426: code_statuses_1.CodeStatuses[426],
    PreconditionRequired428: code_statuses_1.CodeStatuses[428],
    TooManyRequests429: code_statuses_1.CodeStatuses[429],
    RequestHeaderFieldsTooLarge431: code_statuses_1.CodeStatuses[431],
    UnavailableForLegalReasons451: code_statuses_1.CodeStatuses[451],
    InternalServerError500: code_statuses_1.CodeStatuses[500],
    NotImplemented501: code_statuses_1.CodeStatuses[501],
    BadGateway502: code_statuses_1.CodeStatuses[502],
    ServiceUnavailable503: code_statuses_1.CodeStatuses[503],
    GatewayTimeout504: code_statuses_1.CodeStatuses[504],
    HttpVersionNotSupported505: code_statuses_1.CodeStatuses[505],
    VariantAlsoNegotiates506: code_statuses_1.CodeStatuses[506],
    InsufficientStorage507: code_statuses_1.CodeStatuses[507],
    LoopDetected508: code_statuses_1.CodeStatuses[508],
    NotExtended510: code_statuses_1.CodeStatuses[510],
    NetworkAuthenticationRequired511: code_statuses_1.CodeStatuses[511],
    Used226: code_statuses_1.CodeStatuses[226],
    Teapot418: code_statuses_1.CodeStatuses[418],
    Internal500: code_statuses_1.CodeStatuses[500],
};
//# sourceMappingURL=pascal-case-code-statuses.js.map