"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CamelCaseStatuses = void 0;
const code_statuses_1 = require("../code-statuses");
exports.CamelCaseStatuses = {
    continue: code_statuses_1.CodeStatuses[100],
    switchingProtocols: code_statuses_1.CodeStatuses[101],
    processing: code_statuses_1.CodeStatuses[102],
    earlyHints: code_statuses_1.CodeStatuses[103],
    ok: code_statuses_1.CodeStatuses[200],
    created: code_statuses_1.CodeStatuses[201],
    accepted: code_statuses_1.CodeStatuses[202],
    nonAuthoritativeInformation: code_statuses_1.CodeStatuses[203],
    noContent: code_statuses_1.CodeStatuses[204],
    resetContent: code_statuses_1.CodeStatuses[205],
    partialContent: code_statuses_1.CodeStatuses[206],
    multiStatus: code_statuses_1.CodeStatuses[207],
    alreadyReported: code_statuses_1.CodeStatuses[208],
    imUsed: code_statuses_1.CodeStatuses[226],
    multipleChoices: code_statuses_1.CodeStatuses[300],
    movedPermanently: code_statuses_1.CodeStatuses[301],
    found: code_statuses_1.CodeStatuses[302],
    seeOther: code_statuses_1.CodeStatuses[303],
    notModified: code_statuses_1.CodeStatuses[304],
    useProxy: code_statuses_1.CodeStatuses[305],
    switchProxy: code_statuses_1.CodeStatuses[306],
    temporaryRedirect: code_statuses_1.CodeStatuses[307],
    permanentRedirect: code_statuses_1.CodeStatuses[308],
    badRequest: code_statuses_1.CodeStatuses[400],
    unauthorized: code_statuses_1.CodeStatuses[401],
    paymentRequired: code_statuses_1.CodeStatuses[402],
    forbidden: code_statuses_1.CodeStatuses[403],
    notFound: code_statuses_1.CodeStatuses[404],
    methodNotAllowed: code_statuses_1.CodeStatuses[405],
    notAcceptable: code_statuses_1.CodeStatuses[406],
    proxyAuthenticationRequired: code_statuses_1.CodeStatuses[407],
    requestTimeout: code_statuses_1.CodeStatuses[408],
    conflict: code_statuses_1.CodeStatuses[409],
    gone: code_statuses_1.CodeStatuses[410],
    lengthRequired: code_statuses_1.CodeStatuses[411],
    preconditionFailed: code_statuses_1.CodeStatuses[412],
    payloadTooLarge: code_statuses_1.CodeStatuses[413],
    uriTooLong: code_statuses_1.CodeStatuses[414],
    unsupportedMediaType: code_statuses_1.CodeStatuses[415],
    rangeNotSatisfiable: code_statuses_1.CodeStatuses[416],
    expectationFailed: code_statuses_1.CodeStatuses[417],
    imATeapot: code_statuses_1.CodeStatuses[418],
    misdirectedRequest: code_statuses_1.CodeStatuses[421],
    unprocessableEntity: code_statuses_1.CodeStatuses[422],
    locked: code_statuses_1.CodeStatuses[423],
    failedDependency: code_statuses_1.CodeStatuses[424],
    tooEarly: code_statuses_1.CodeStatuses[425],
    upgradeRequired: code_statuses_1.CodeStatuses[426],
    preconditionRequired: code_statuses_1.CodeStatuses[428],
    tooManyRequests: code_statuses_1.CodeStatuses[429],
    requestHeaderFieldsTooLarge: code_statuses_1.CodeStatuses[431],
    unavailableForLegalReasons: code_statuses_1.CodeStatuses[451],
    internalServerError: code_statuses_1.CodeStatuses[500],
    notImplemented: code_statuses_1.CodeStatuses[501],
    badGateway: code_statuses_1.CodeStatuses[502],
    serviceUnavailable: code_statuses_1.CodeStatuses[503],
    gatewayTimeout: code_statuses_1.CodeStatuses[504],
    httpVersionNotSupported: code_statuses_1.CodeStatuses[505],
    variantAlsoNegotiates: code_statuses_1.CodeStatuses[506],
    insufficientStorage: code_statuses_1.CodeStatuses[507],
    loopDetected: code_statuses_1.CodeStatuses[508],
    notExtended: code_statuses_1.CodeStatuses[510],
    networkAuthenticationRequired: code_statuses_1.CodeStatuses[511],
    used: code_statuses_1.CodeStatuses[226],
    teapot: code_statuses_1.CodeStatuses[418],
    internal: code_statuses_1.CodeStatuses[500],
};
//# sourceMappingURL=camel-case-statuses.js.map