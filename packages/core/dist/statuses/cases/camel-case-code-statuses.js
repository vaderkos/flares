"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CamelCaseCodeStatuses = void 0;
const code_statuses_1 = require("../code-statuses");
exports.CamelCaseCodeStatuses = {
    continue100: code_statuses_1.CodeStatuses[100],
    switchingProtocols101: code_statuses_1.CodeStatuses[101],
    processing102: code_statuses_1.CodeStatuses[102],
    earlyHints103: code_statuses_1.CodeStatuses[103],
    ok200: code_statuses_1.CodeStatuses[200],
    created201: code_statuses_1.CodeStatuses[201],
    accepted202: code_statuses_1.CodeStatuses[202],
    nonAuthoritativeInformation203: code_statuses_1.CodeStatuses[203],
    noContent204: code_statuses_1.CodeStatuses[204],
    resetContent205: code_statuses_1.CodeStatuses[205],
    partialContent206: code_statuses_1.CodeStatuses[206],
    multiStatus207: code_statuses_1.CodeStatuses[207],
    alreadyReported208: code_statuses_1.CodeStatuses[208],
    imUsed226: code_statuses_1.CodeStatuses[226],
    multipleChoices300: code_statuses_1.CodeStatuses[300],
    movedPermanently301: code_statuses_1.CodeStatuses[301],
    found302: code_statuses_1.CodeStatuses[302],
    seeOther303: code_statuses_1.CodeStatuses[303],
    notModified304: code_statuses_1.CodeStatuses[304],
    useProxy305: code_statuses_1.CodeStatuses[305],
    switchProxy306: code_statuses_1.CodeStatuses[306],
    temporaryRedirect307: code_statuses_1.CodeStatuses[307],
    permanentRedirect308: code_statuses_1.CodeStatuses[308],
    badRequest400: code_statuses_1.CodeStatuses[400],
    unauthorized401: code_statuses_1.CodeStatuses[401],
    paymentRequired402: code_statuses_1.CodeStatuses[402],
    forbidden403: code_statuses_1.CodeStatuses[403],
    notFound404: code_statuses_1.CodeStatuses[404],
    methodNotAllowed405: code_statuses_1.CodeStatuses[405],
    notAcceptable406: code_statuses_1.CodeStatuses[406],
    proxyAuthenticationRequired407: code_statuses_1.CodeStatuses[407],
    requestTimeout408: code_statuses_1.CodeStatuses[408],
    conflict409: code_statuses_1.CodeStatuses[409],
    gone410: code_statuses_1.CodeStatuses[410],
    lengthRequired411: code_statuses_1.CodeStatuses[411],
    preconditionFailed412: code_statuses_1.CodeStatuses[412],
    payloadTooLarge413: code_statuses_1.CodeStatuses[413],
    uriTooLong414: code_statuses_1.CodeStatuses[414],
    unsupportedMediaType415: code_statuses_1.CodeStatuses[415],
    rangeNotSatisfiable416: code_statuses_1.CodeStatuses[416],
    expectationFailed417: code_statuses_1.CodeStatuses[417],
    imATeapot418: code_statuses_1.CodeStatuses[418],
    misdirectedRequest421: code_statuses_1.CodeStatuses[421],
    unprocessableEntity422: code_statuses_1.CodeStatuses[422],
    locked423: code_statuses_1.CodeStatuses[423],
    failedDependency424: code_statuses_1.CodeStatuses[424],
    tooEarly425: code_statuses_1.CodeStatuses[425],
    upgradeRequired426: code_statuses_1.CodeStatuses[426],
    preconditionRequired428: code_statuses_1.CodeStatuses[428],
    tooManyRequests429: code_statuses_1.CodeStatuses[429],
    requestHeaderFieldsTooLarge431: code_statuses_1.CodeStatuses[431],
    unavailableForLegalReasons451: code_statuses_1.CodeStatuses[451],
    internalServerError500: code_statuses_1.CodeStatuses[500],
    notImplemented501: code_statuses_1.CodeStatuses[501],
    badGateway502: code_statuses_1.CodeStatuses[502],
    serviceUnavailable503: code_statuses_1.CodeStatuses[503],
    gatewayTimeout504: code_statuses_1.CodeStatuses[504],
    httpVersionNotSupported505: code_statuses_1.CodeStatuses[505],
    variantAlsoNegotiates506: code_statuses_1.CodeStatuses[506],
    insufficientStorage507: code_statuses_1.CodeStatuses[507],
    loopDetected508: code_statuses_1.CodeStatuses[508],
    notExtended510: code_statuses_1.CodeStatuses[510],
    networkAuthenticationRequired511: code_statuses_1.CodeStatuses[511],
    used226: code_statuses_1.CodeStatuses[226],
    teapot418: code_statuses_1.CodeStatuses[418],
    internal500: code_statuses_1.CodeStatuses[500],
};
//# sourceMappingURL=camel-case-code-statuses.js.map