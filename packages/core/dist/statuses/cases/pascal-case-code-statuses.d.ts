export declare type PascalCaseCodeStatuses = typeof PascalCaseCodeStatuses;
export declare const PascalCaseCodeStatuses: {
    readonly Continue100: readonly [100, "Continue"];
    readonly SwitchingProtocols101: readonly [101, "Switching Protocols"];
    readonly Processing102: readonly [102, "Processing"];
    readonly EarlyHints103: readonly [103, "Early Hints"];
    readonly Ok200: readonly [200, "OK"];
    readonly Created201: readonly [201, "Created"];
    readonly Accepted202: readonly [202, "Accepted"];
    readonly NonAuthoritativeInformation203: readonly [203, "Non-Authoritative Information"];
    readonly NoContent204: readonly [204, "No Content"];
    readonly ResetContent205: readonly [205, "Reset Content"];
    readonly PartialContent206: readonly [206, "Partial Content"];
    readonly MultiStatus207: readonly [207, "Multi-Status"];
    readonly AlreadyReported208: readonly [208, "Already Reported"];
    readonly ImUsed226: readonly [226, "IM Used"];
    readonly MultipleChoices300: readonly [300, "Multiple Choices"];
    readonly MovedPermanently301: readonly [301, "Moved Permanently"];
    readonly Found302: readonly [302, "Found"];
    readonly SeeOther303: readonly [303, "See Other"];
    readonly NotModified304: readonly [304, "Not Modified"];
    readonly UseProxy305: readonly [305, "Use Proxy"];
    readonly SwitchProxy306: readonly [306, "Switch Proxy"];
    readonly TemporaryRedirect307: readonly [307, "Temporary Redirect"];
    readonly PermanentRedirect308: readonly [308, "Permanent Redirect"];
    readonly BadRequest400: readonly [400, "Bad Request"];
    readonly Unauthorized401: readonly [401, "Unauthorized"];
    readonly PaymentRequired402: readonly [402, "Payment Required"];
    readonly Forbidden403: readonly [403, "Forbidden"];
    readonly NotFound404: readonly [404, "Not Found"];
    readonly MethodNotAllowed405: readonly [405, "Method Not Allowed"];
    readonly NotAcceptable406: readonly [406, "Not Acceptable"];
    readonly ProxyAuthenticationRequired407: readonly [407, "Proxy Authentication Required"];
    readonly RequestTimeout408: readonly [408, "Request Timeout"];
    readonly Conflict409: readonly [409, "Conflict"];
    readonly Gone410: readonly [410, "Gone"];
    readonly LengthRequired411: readonly [411, "Length Required"];
    readonly PreconditionFailed412: readonly [412, "Precondition Failed"];
    readonly PayloadTooLarge413: readonly [413, "Payload Too Large"];
    readonly UriTooLong414: readonly [414, "URI Too Long"];
    readonly UnsupportedMediaType415: readonly [415, "Unsupported Media Type"];
    readonly RangeNotSatisfiable416: readonly [416, "Range Not Satisfiable"];
    readonly ExpectationFailed417: readonly [417, "Expectation Failed"];
    readonly ImATeapot418: readonly [418, "I'm a teapot"];
    readonly MisdirectedRequest421: readonly [421, "Misdirected Request"];
    readonly UnprocessableEntity422: readonly [422, "Unprocessable Entity"];
    readonly Locked423: readonly [423, "Locked"];
    readonly FailedDependency424: readonly [424, "Failed Dependency"];
    readonly TooEarly425: readonly [425, "Too Early"];
    readonly UpgradeRequired426: readonly [426, "Upgrade Required"];
    readonly PreconditionRequired428: readonly [428, "Precondition Required"];
    readonly TooManyRequests429: readonly [429, "Too Many Requests"];
    readonly RequestHeaderFieldsTooLarge431: readonly [431, "Request Header Fields Too Large"];
    readonly UnavailableForLegalReasons451: readonly [451, "Unavailable For Legal Reasons"];
    readonly InternalServerError500: readonly [500, "Internal Server Error"];
    readonly NotImplemented501: readonly [501, "Not Implemented"];
    readonly BadGateway502: readonly [502, "Bad Gateway"];
    readonly ServiceUnavailable503: readonly [503, "Service Unavailable"];
    readonly GatewayTimeout504: readonly [504, "Gateway Timeout"];
    readonly HttpVersionNotSupported505: readonly [505, "HTTP Version Not Supported"];
    readonly VariantAlsoNegotiates506: readonly [506, "Variant Also Negotiates"];
    readonly InsufficientStorage507: readonly [507, "Insufficient Storage"];
    readonly LoopDetected508: readonly [508, "Loop Detected"];
    readonly NotExtended510: readonly [510, "Not Extended"];
    readonly NetworkAuthenticationRequired511: readonly [511, "Network Authentication Required"];
    readonly Used226: readonly [226, "IM Used"];
    readonly Teapot418: readonly [418, "I'm a teapot"];
    readonly Internal500: readonly [500, "Internal Server Error"];
};
