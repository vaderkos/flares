"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Internal = exports.Teapot = exports.Used = exports.NetworkAuthenticationRequired = exports.NotExtended = exports.LoopDetected = exports.InsufficientStorage = exports.VariantAlsoNegotiates = exports.HttpVersionNotSupported = exports.GatewayTimeout = exports.ServiceUnavailable = exports.BadGateway = exports.NotImplemented = exports.InternalServerError = exports.UnavailableForLegalReasons = exports.RequestHeaderFieldsTooLarge = exports.TooManyRequests = exports.PreconditionRequired = exports.UpgradeRequired = exports.TooEarly = exports.FailedDependency = exports.Locked = exports.UnprocessableEntity = exports.MisdirectedRequest = exports.ImATeapot = exports.ExpectationFailed = exports.RangeNotSatisfiable = exports.UnsupportedMediaType = exports.UriTooLong = exports.PayloadTooLarge = exports.PreconditionFailed = exports.LengthRequired = exports.Gone = exports.Conflict = exports.RequestTimeout = exports.ProxyAuthenticationRequired = exports.NotAcceptable = exports.MethodNotAllowed = exports.NotFound = exports.Forbidden = exports.PaymentRequired = exports.Unauthorized = exports.BadRequest = exports.PermanentRedirect = exports.TemporaryRedirect = exports.SwitchProxy = exports.UseProxy = exports.NotModified = exports.SeeOther = exports.Found = exports.MovedPermanently = exports.MultipleChoices = exports.ImUsed = exports.AlreadyReported = exports.MultiStatus = exports.PartialContent = exports.ResetContent = exports.NoContent = exports.NonAuthoritativeInformation = exports.Accepted = exports.Created = exports.Ok = exports.EarlyHints = exports.Processing = exports.SwitchingProtocols = exports.Continue = exports.Fls = exports.PascalCaseFlares = void 0;
const core_1 = require("@flares/core");
const PascalCaseFlares = new core_1.Flares(core_1.PascalCaseStatuses);
exports.PascalCaseFlares = PascalCaseFlares;
exports.Fls = PascalCaseFlares;
exports.Continue = PascalCaseFlares.Continue, exports.SwitchingProtocols = PascalCaseFlares.SwitchingProtocols, exports.Processing = PascalCaseFlares.Processing, exports.EarlyHints = PascalCaseFlares.EarlyHints, exports.Ok = PascalCaseFlares.Ok, exports.Created = PascalCaseFlares.Created, exports.Accepted = PascalCaseFlares.Accepted, exports.NonAuthoritativeInformation = PascalCaseFlares.NonAuthoritativeInformation, exports.NoContent = PascalCaseFlares.NoContent, exports.ResetContent = PascalCaseFlares.ResetContent, exports.PartialContent = PascalCaseFlares.PartialContent, exports.MultiStatus = PascalCaseFlares.MultiStatus, exports.AlreadyReported = PascalCaseFlares.AlreadyReported, exports.ImUsed = PascalCaseFlares.ImUsed, exports.MultipleChoices = PascalCaseFlares.MultipleChoices, exports.MovedPermanently = PascalCaseFlares.MovedPermanently, exports.Found = PascalCaseFlares.Found, exports.SeeOther = PascalCaseFlares.SeeOther, exports.NotModified = PascalCaseFlares.NotModified, exports.UseProxy = PascalCaseFlares.UseProxy, exports.SwitchProxy = PascalCaseFlares.SwitchProxy, exports.TemporaryRedirect = PascalCaseFlares.TemporaryRedirect, exports.PermanentRedirect = PascalCaseFlares.PermanentRedirect, exports.BadRequest = PascalCaseFlares.BadRequest, exports.Unauthorized = PascalCaseFlares.Unauthorized, exports.PaymentRequired = PascalCaseFlares.PaymentRequired, exports.Forbidden = PascalCaseFlares.Forbidden, exports.NotFound = PascalCaseFlares.NotFound, exports.MethodNotAllowed = PascalCaseFlares.MethodNotAllowed, exports.NotAcceptable = PascalCaseFlares.NotAcceptable, exports.ProxyAuthenticationRequired = PascalCaseFlares.ProxyAuthenticationRequired, exports.RequestTimeout = PascalCaseFlares.RequestTimeout, exports.Conflict = PascalCaseFlares.Conflict, exports.Gone = PascalCaseFlares.Gone, exports.LengthRequired = PascalCaseFlares.LengthRequired, exports.PreconditionFailed = PascalCaseFlares.PreconditionFailed, exports.PayloadTooLarge = PascalCaseFlares.PayloadTooLarge, exports.UriTooLong = PascalCaseFlares.UriTooLong, exports.UnsupportedMediaType = PascalCaseFlares.UnsupportedMediaType, exports.RangeNotSatisfiable = PascalCaseFlares.RangeNotSatisfiable, exports.ExpectationFailed = PascalCaseFlares.ExpectationFailed, exports.ImATeapot = PascalCaseFlares.ImATeapot, exports.MisdirectedRequest = PascalCaseFlares.MisdirectedRequest, exports.UnprocessableEntity = PascalCaseFlares.UnprocessableEntity, exports.Locked = PascalCaseFlares.Locked, exports.FailedDependency = PascalCaseFlares.FailedDependency, exports.TooEarly = PascalCaseFlares.TooEarly, exports.UpgradeRequired = PascalCaseFlares.UpgradeRequired, exports.PreconditionRequired = PascalCaseFlares.PreconditionRequired, exports.TooManyRequests = PascalCaseFlares.TooManyRequests, exports.RequestHeaderFieldsTooLarge = PascalCaseFlares.RequestHeaderFieldsTooLarge, exports.UnavailableForLegalReasons = PascalCaseFlares.UnavailableForLegalReasons, exports.InternalServerError = PascalCaseFlares.InternalServerError, exports.NotImplemented = PascalCaseFlares.NotImplemented, exports.BadGateway = PascalCaseFlares.BadGateway, exports.ServiceUnavailable = PascalCaseFlares.ServiceUnavailable, exports.GatewayTimeout = PascalCaseFlares.GatewayTimeout, exports.HttpVersionNotSupported = PascalCaseFlares.HttpVersionNotSupported, exports.VariantAlsoNegotiates = PascalCaseFlares.VariantAlsoNegotiates, exports.InsufficientStorage = PascalCaseFlares.InsufficientStorage, exports.LoopDetected = PascalCaseFlares.LoopDetected, exports.NotExtended = PascalCaseFlares.NotExtended, exports.NetworkAuthenticationRequired = PascalCaseFlares.NetworkAuthenticationRequired, exports.Used = PascalCaseFlares.Used, exports.Teapot = PascalCaseFlares.Teapot, exports.Internal = PascalCaseFlares.Internal;
//# sourceMappingURL=pascal-case-flares.js.map